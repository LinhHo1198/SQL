#In this SQL project, I will be querying a database with multiple tables to quantify statistics about Chinook Digital Music Store. 
#The primary objective is to utilize SQL to analyze data from the database and derive insights that can help optimize their business opportunities and address relevant business-related questions.


#1. Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country <> "USA";

#2.Show only the Customers from Brazil.
SELECT * 
FROM chinook.customers 
WHERE Country = "Brazil";

#3. Identify the employees with the highest total sales and their corresponding customer accounts.
SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(i.InvoiceID) AS TotalSales
FROM employees e
LEFT JOIN customers c ON e.EmployeeID = c.SupportRepID
LEFT JOIN invoices i ON c.CustomerID = i.CustomerID
GROUP BY e.EmployeeID, e.FirstName, e.LastName
ORDER BY TotalSales DESC
LIMIT 5; -- Change the limit to get more top sales reps if needed

#4. Find the Invoices of customers who are from Brazil.
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.BillingCountry, inv.InvoiceDate
FROM chinook.invoices as inv 
LEFT JOIN chinook.customers as cust 
on inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = "Brazil";

#5. Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees  
WHERE title = "Sales Support Agent";

#6. Which countries have the most Invoices?
SELECT Billingcountry, count(invoiceID) as Invoice_Number
FROM chinook.invoices
GROUP BY billingcountry
ORDER BY Invoice_Number DESC; 

#7. Which city has the best customers?
--The city who has the highest total invoice amounts will be declared the best city with best customers.
SELECT Billingcity, SUM(total) as total_invoice
FROM chinook.invoices
GROUP BY billingcity
ORDER BY total_invoice DESC; 

#8. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry 
FROM chinook.Invoices ;

#9. Provide a query that shows the invoices associated with each sales agent.
SELECT emp.LastName, emp.Firstname, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

#10. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

#11 Who is the best customer? 
--The customer who has spent the most money will be declared the best customer. 
SELECT cust.customerid, cust.FirstName, cust.LastName, SUM(inv.TOTAL) AS total_spending
FROM chinook.customers as cust 
JOIN chinook.invoices as inv
on inv.CustomerId = cust.CustomerId 
GROUP BY cust.customerid
ORDER BY total_spending DESC
LIMIT 1
;

#12. Which customers have purchased tracks from the 'Rock' genre? Provide their email, first name, and last name.
--Return your list ordered alphabetically by email address starting with A.
SELECT DISTINCT cust.email, cust.firstname, cust.lastname
FROM chinook.customers AS cust 
JOIN chinook.invoices AS inv ON cust.customerid = inv.customerid
JOIN chinook.invoice_items AS items ON inv.invoiceid = items.invoiceid
WHERE items.trackid IN (
    SELECT trackid FROM chinook.tracks track
    JOIN chinook.genres genre ON track.genreid = genre.genreid
    WHERE genre.name = 'Rock'
)
ORDER BY cust.email;

#13. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#14. What are the total sales for 2009?
SELECT SUM(total)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#15. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId;

#16. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

#17. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

#18. Show the total sales made by each sales agent.
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

#19. Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;













